{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axiosInstance from './axiosConfig';\nconst useAuth = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem(\"Token\"); // Always fetch the latest token\n\n    if (token) {\n      axiosInstance.get(\"user/\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        } // Ensure latest token is used\n      }).then(response => setUser(response.data)).catch(error => {\n        console.log(\"Error fetching user:\", error.response ? error.response.data : error);\n        setUser(null);\n      });\n    } else {\n      setUser(null);\n    }\n  }, []); // Run only on mount to prevent unnecessary API calls\n\n  return user;\n};\n_s(useAuth, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\nexport default useAuth;","map":{"version":3,"names":["useState","useEffect","axiosInstance","useAuth","_s","user","setUser","token","localStorage","getItem","get","headers","Authorization","then","response","data","catch","error","console","log"],"sources":["C:/Users/siddhant/Desktop/Annotation tool/frontend/tool/src/useAuth.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axiosInstance from './axiosConfig'; \r\n\r\nconst useAuth = () => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"Token\"); // Always fetch the latest token\r\n\r\n        if (token) {\r\n            axiosInstance.get(\"user/\", {\r\n                headers: { Authorization: `Bearer ${token}` } // Ensure latest token is used\r\n            })\r\n            .then(response => setUser(response.data))\r\n            .catch(error => {\r\n                console.log(\"Error fetching user:\", error.response ? error.response.data : error);\r\n                setUser(null);\r\n            });\r\n        } else {\r\n            setUser(null);\r\n        }\r\n    }, []); // Run only on mount to prevent unnecessary API calls\r\n\r\n    return user;\r\n};\r\n\r\nexport default useAuth;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,eAAe;AAEzC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMM,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;IAE7C,IAAIF,KAAK,EAAE;MACPL,aAAa,CAACQ,GAAG,CAAC,OAAO,EAAE;QACvBC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUL,KAAK;QAAG,CAAC,CAAC;MAClD,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAIR,OAAO,CAACQ,QAAQ,CAACC,IAAI,CAAC,CAAC,CACxCC,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACC,IAAI,GAAGE,KAAK,CAAC;QACjFX,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,CAAC;IACN,CAAC,MAAM;MACHA,OAAO,CAAC,IAAI,CAAC;IACjB;EACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,OAAOD,IAAI;AACf,CAAC;AAACD,EAAA,CArBID,OAAO;AAuBb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}