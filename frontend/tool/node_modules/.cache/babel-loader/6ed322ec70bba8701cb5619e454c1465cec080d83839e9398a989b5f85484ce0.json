{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = \"http://127.0.0.1:8000/\";\nconst axiosInstance = axios.create({\n  baseURL,\n  headers: {\n    Authorization: localStorage.getItem(\"Token\") ? `Bearer ${localStorage.getItem(\"Token\")}` : \"\"\n  }\n});\naxiosInstance.interceptors.response.use(response => response, async error => {\n  if (error.response && error.response.status === 401) {\n    // Token expired\n    console.log(\"Token expired, attempting to refresh...\");\n    try {\n      const refreshToken = localStorage.getItem(\"RefreshToken\");\n      if (!refreshToken) {\n        throw new Error(\"No refresh token available.\");\n      }\n      const response = await axios.post(`${baseURL}/token/refresh/`, {\n        refresh: refreshToken\n      });\n      if (response.status === 200) {\n        const newToken = response.data.access;\n        localStorage.setItem(\"Token\", newToken);\n        error.config.headers.Authorization = `Bearer ${newToken}`;\n        return axiosInstance(error.config);\n      }\n    } catch (refreshError) {\n      console.log(\"Refresh token failed, logging out...\");\n      localStorage.removeItem(\"Token\");\n      localStorage.removeItem(\"RefreshToken\");\n      window.location.reload();\n    }\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","baseURL","axiosInstance","create","headers","Authorization","localStorage","getItem","interceptors","response","use","error","status","console","log","refreshToken","Error","post","refresh","newToken","data","access","setItem","config","refreshError","removeItem","window","location","reload","Promise","reject"],"sources":["C:/Users/siddhant/Desktop/Annotation tool/frontend/tool/src/axiosConfig.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\nconst baseURL = \"http://127.0.0.1:8000/\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL,\r\n  headers: {\r\n    Authorization: localStorage.getItem(\"Token\") ? `Bearer ${localStorage.getItem(\"Token\")}` : \"\",\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  response => response,\r\n  async (error) => {\r\n    if (error.response && error.response.status === 401) { // Token expired\r\n      console.log(\"Token expired, attempting to refresh...\");\r\n      \r\n      try {\r\n        const refreshToken = localStorage.getItem(\"RefreshToken\");\r\n        if (!refreshToken) {\r\n          throw new Error(\"No refresh token available.\");\r\n        }\r\n\r\n        const response = await axios.post(`${baseURL}/token/refresh/`, { refresh: refreshToken });\r\n\r\n        if (response.status === 200) {\r\n          const newToken = response.data.access;\r\n          localStorage.setItem(\"Token\", newToken);\r\n          error.config.headers.Authorization = `Bearer ${newToken}`;\r\n          return axiosInstance(error.config);\r\n        }\r\n      } catch (refreshError) {\r\n        console.log(\"Refresh token failed, logging out...\");\r\n        localStorage.removeItem(\"Token\");\r\n        localStorage.removeItem(\"RefreshToken\");\r\n        window.location.reload();\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n \r\nexport default axiosInstance"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,wBAAwB;AAExC,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCF,OAAO;EACPG,OAAO,EAAE;IACPC,aAAa,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAG,UAAUD,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG;EAC7F;AACF,CAAC,CAAC;AAEFL,aAAa,CAACM,YAAY,CAACC,QAAQ,CAACC,GAAG,CACrCD,QAAQ,IAAIA,QAAQ,EACpB,MAAOE,KAAK,IAAK;EACf,IAAIA,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;IAAE;IACrDC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;IAEtD,IAAI;MACF,MAAMC,YAAY,GAAGT,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,IAAI,CAACQ,YAAY,EAAE;QACjB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMP,QAAQ,GAAG,MAAMT,KAAK,CAACiB,IAAI,CAAC,GAAGhB,OAAO,iBAAiB,EAAE;QAAEiB,OAAO,EAAEH;MAAa,CAAC,CAAC;MAEzF,IAAIN,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAMO,QAAQ,GAAGV,QAAQ,CAACW,IAAI,CAACC,MAAM;QACrCf,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAAC;QACvCR,KAAK,CAACY,MAAM,CAACnB,OAAO,CAACC,aAAa,GAAG,UAAUc,QAAQ,EAAE;QACzD,OAAOjB,aAAa,CAACS,KAAK,CAACY,MAAM,CAAC;MACpC;IACF,CAAC,CAAC,OAAOC,YAAY,EAAE;MACrBX,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MACnDR,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC;MAChCnB,YAAY,CAACmB,UAAU,CAAC,cAAc,CAAC;MACvCC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B;EACF;EACA,OAAOC,OAAO,CAACC,MAAM,CAACnB,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeT,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}